#Deployments de Kafka
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-strimzi-api-deployment
  namespace: squidgame
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kafka-strimzi-api
  template:
    metadata:
      labels:
        app: kafka-strimzi-api
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - name: kafka-strimzi-producer
        image: cristianfrancisco85/kafka-api
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 30
        env:
        - name: kafkaURL
          value: "my-cluster-kafka-bootstrap:9092"
        - name: topic
          value: "squidgame"
        - name: GroupID
          value: "squidgame"
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-strimzi-worker-deployment
  namespace: squidgame
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-strimzi-worker
  template:
    metadata:
      labels:
        app: kafka-strimzi-worker
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - name: kafka-strimzi-worker
        image: cristianfrancisco85/kafka-worker
        env:
        - name: kafkaURL
          value: "my-cluster-kafka-bootstrap:9092"
        - name: topic
          value: "squidgame"
        - name: GroupID
          value: "squidgame"
        - name: redisURL
          value: "35.225.83.23:6379"
        - name: redisPassword
          value: "password85@"
status: {}
---
#Deployments de PubSub
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pubsub-api-deployment
  namespace: squidgame
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pubsub-api
  template:
    metadata:
      labels:
        app: pubsub-api
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - name: pubsub-producer
        image: cristianfrancisco85/pubsub-api
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 30
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pubsub-worker-deployment
  namespace: squidgame
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pubsub-worker
  template:
    metadata:
      labels:
        app: pubsub-worker
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - name: pubsub-worker
        image: cristianfrancisco85/pubsub-worker
        env:
        - name: redisURL
          value: "35.225.83.23:6379"
        - name: redisPassword
          value: "password85@"
status: {}
---
#Deployment de Web App
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
  namespace: squidgame
spec:
  replicas: 1
  selector:
    matchLabels:
      role: web-app
  template:
    metadata:
      labels:
        role: web-app
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - name: react-app
        image: cristianfrancisco85/react-app:latest
        ports:
        - containerPort: 80
      - name: nodejs-app
        image: cristianfrancisco85/nodejs-app:latest
        ports:
        - containerPort: 4000
---
#ClusterIP de Kafka
apiVersion: v1
kind: Service
metadata:
  name: kafka-clusterip
  namespace: squidgame
spec:
  selector:
    app: kafka-strimzi-api
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
---
#ClusterIP de PubSub
apiVersion: v1
kind: Service
metadata:
  name: pubsub-clusterip
  namespace: squidgame
spec:
  selector:
    app: pubsub-api
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
---
#ClusterIP de NodeJS
apiVersion: v1
kind: Service
metadata:
  name: web-app-clusterip
  namespace: squidgame
spec:
  ports:
  - port: 80
    name: http
    targetPort: 80
  - port: 4000
    name: nodejs-app
    targetPort: 4000
  selector:
    role: web-app
---
#Ingress de Kafka y PubSub
apiVersion: networking.k8s.io/v1 
kind: Ingress 
metadata: 
  name: main-ingress 
  annotations: 
    kubernetes.io/ingress.class: nginx 
    nginx.ingress.kubernetes.io/service-upstream: "true"
  namespace: squidgame
spec: 
  rules: 
  - host: 104.197.35.114.nip.io
    http: 
      paths: 
      - path: /
        pathType: Prefix 
        backend: 
          service: 
            name: kafka-clusterip 
            port: 
              number: 8080
---
#Ingress de NodeJS
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-app-clusterip
            port: 
              number: 4000
---
#NodePort de React App
apiVersion: v1
kind: Service
metadata:
  name: react-dashboard
  namespace: squidgame
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30000
  selector:
    role: web-app
---
#ConfigMap para NGINX de Error Injector
apiVersion: v1
kind: ConfigMap
metadata:
  name: error-injector
  namespace: squidgame
data:
 nginx.conf: |-
    events {}
    http {
        server {
          listen 8080;
            location / {
                return 500;
            }
        }
    }
---
#Deployment de Error Injector
apiVersion: apps/v1
kind: Deployment
metadata:
  name: error-injector
  namespace: squidgame
  labels:
    app: error-injector
spec:
  selector:
    matchLabels:
      app: error-injector
  replicas: 1
  template:
    metadata:
      labels:
        app: error-injector
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: error-injector
---
#ClusterIP de Error Injector
apiVersion: v1
kind: Service
metadata:
  name: error-injector
  namespace: squidgame
spec:
  ports:
  - name: service
    port: 8080
  selector:
    app: error-injector
---
#Inyeccion de Traffic Split
apiVersion: split.smi-spec.io/v1alpha1
kind: TrafficSplit
metadata:
  name: error-split
  namespace: squidgame
spec:
  service: kafka-clusterip
  backends:
  - service: kafka-clusterip
    weight: 400m
  - service: pubsub-clusterip
    weight: 400m
  - service: error-injector
    weight: 200m